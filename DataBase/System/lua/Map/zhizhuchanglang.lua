蜘蛛长廊刷新区域表 = {
    "蜘蛛长廊一层",
    "蜘蛛长廊二层",
    "蜘蛛长廊三层",
}

标准普通刷怪表 = {
    { "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12",
      "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12",
      "恶臭蜘蛛12", "恶臭蜘蛛12",
      "食尸蜘蛛13", "食尸蜘蛛13", "食尸蜘蛛13",
      "虫巢1438", "虫巢1438"
    },

    { "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11",
      "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11",
      "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11",
      "食尸蜘蛛13", "食尸蜘蛛13", "食尸蜘蛛13", "食尸蜘蛛13",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",   "虫巢1438",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",   "虫巢1438" 
    },

    { "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12",
      "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12",
      "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12", "恶臭蜘蛛12",
      "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11",
      "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11", "食人蜘蛛11",
      "食尸蜘蛛13", "食尸蜘蛛13", "食尸蜘蛛13", "食尸蜘蛛13", "食尸蜘蛛13",
      "食尸蜘蛛13", "食尸蜘蛛13", "食尸蜘蛛13", "食尸蜘蛛13", "食尸蜘蛛13",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",  "虫巢1438",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",  "虫巢1438",
      "虫巢5744",
    },
}

标准精英刷怪表 = {
    { "苦痛蜘蛛15", "苦痛蜘蛛15", "苦痛蜘蛛15", 
      "鬼面蜘蛛 猎魔17" 
    },

    { "血翼蜘蛛14", "血翼蜘蛛14", "血翼蜘蛛14", "血翼蜘蛛14",
      "鬼面蜘蛛 血魔27" 
    },

    { "苦痛蜘蛛15", "苦痛蜘蛛15", "苦痛蜘蛛15", "苦痛蜘蛛15", "苦痛蜘蛛15",
      "血翼蜘蛛14", "血翼蜘蛛14", "血翼蜘蛛14", "血翼蜘蛛14", "血翼蜘蛛14",
      "鬼面蜘蛛 天魔37",
      "虫巢5744",
    }
}

进阶普通刷怪表 = {
    { "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22",
      "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22",
      "恶臭蜘蛛22", "恶臭蜘蛛22",
      "食尸蜘蛛23", "食尸蜘蛛23", "食尸蜘蛛23",
      "虫巢1438", "虫巢1438"
    },

    { "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21",
      "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21",
      "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21",
      "食尸蜘蛛23", "食尸蜘蛛23", "食尸蜘蛛23", "食尸蜘蛛23",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",   "虫巢1438",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",   "虫巢1438"
    },

    { "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22",
      "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22",
      "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22", "恶臭蜘蛛22",
      "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21",
      "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21", "食人蜘蛛21",
      "食尸蜘蛛23", "食尸蜘蛛23", "食尸蜘蛛23", "食尸蜘蛛23", "食尸蜘蛛23",
      "食尸蜘蛛23", "食尸蜘蛛23", "食尸蜘蛛23", "食尸蜘蛛23", "食尸蜘蛛23",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",  "虫巢1438",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",  "虫巢1438",
      "虫巢5744",
    },
}

进阶精英刷怪表 = {
    { "苦痛蜘蛛25", "苦痛蜘蛛25", "苦痛蜘蛛25",
      "鬼面蜘蛛 猎魔17"
    },

    { "血翼蜘蛛24", "血翼蜘蛛24", "血翼蜘蛛24", "血翼蜘蛛24",
      "鬼面蜘蛛 血魔27"
    },

    { "苦痛蜘蛛25", "苦痛蜘蛛25", "苦痛蜘蛛25", "苦痛蜘蛛25", "苦痛蜘蛛25",
      "血翼蜘蛛24", "血翼蜘蛛24", "血翼蜘蛛24", "血翼蜘蛛24", "血翼蜘蛛24",
      "鬼面蜘蛛 天魔37",
      "虫巢5744",
    }
}

困难普通刷怪表 = {
    { "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32",
      "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32",
      "恶臭蜘蛛32", "恶臭蜘蛛32",
      "食尸蜘蛛33", "食尸蜘蛛33", "食尸蜘蛛33",
      "虫巢1438", "虫巢1438"
    },

    { "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31",
      "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31",
      "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31",
      "食尸蜘蛛33", "食尸蜘蛛33", "食尸蜘蛛33", "食尸蜘蛛33",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",   "虫巢1438",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",   "虫巢1438"
    },

    { "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32",
      "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32",
      "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32", "恶臭蜘蛛32",
      "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31",
      "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31", "食人蜘蛛31",
      "食尸蜘蛛33", "食尸蜘蛛33", "食尸蜘蛛33", "食尸蜘蛛33", "食尸蜘蛛33",
      "食尸蜘蛛33", "食尸蜘蛛33", "食尸蜘蛛33", "食尸蜘蛛33", "食尸蜘蛛33",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",  "虫巢1438",
      "虫巢1438",    "虫巢1438",   "虫巢1438",   "虫巢1438",  "虫巢1438",
      "虫巢5744",
    },
}

困难精英刷怪表 = {
    { "苦痛蜘蛛35", "苦痛蜘蛛35", "苦痛蜘蛛35", 
      "鬼面蜘蛛 猎魔17" 
    },

    { "血翼蜘蛛34", "血翼蜘蛛34", "血翼蜘蛛34", "血翼蜘蛛34",
      "鬼面蜘蛛 血魔27" 
    },

    { "苦痛蜘蛛35", "苦痛蜘蛛35", "苦痛蜘蛛35", "苦痛蜘蛛35", "苦痛蜘蛛35",
      "血翼蜘蛛34", "血翼蜘蛛34", "血翼蜘蛛34", "血翼蜘蛛34", "血翼蜘蛛34",
      "鬼面蜘蛛 天魔37",
      "虫巢5744"
    }
}

function 蜘蛛长廊_执行(地图)
    if 地图.数字变量[数字_蜘蛛长廊级别] == 0 then
        if 主程.当前时间 > 地图.节点计时 then
            if 地图.玩家列表.Count == 0 then
                地图.副本节点 = 255
            end
            if 地图.副本节点 == 255 then
                地图:关闭副本()
            elseif 地图.副本节点 == 0 then
                地图:地图公告("<#T:710387>") --请等待其他勇士准备
                地图.副本节点 = 地图.副本节点 + 1
                地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
            elseif 地图.副本节点 == 1 then
                地图.副本节点 = 10
                地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
            elseif 地图.副本节点 > 9 then
                local 节点 = 地图.副本节点 % 10
                local 层数 = 地图.副本节点 // 10
                if 节点 == 0 then
                    if 层数 == 1 then
                        地图:地图公告("<#T:990175>") --消灭本层所有的怪物之后，到下层的传送阵将会出现。
                    elseif 层数 == 2 then
                        地图:地图公告("<#T:990175>") --消灭本层所有的怪物之后，到下层的传送阵将会出现。
                    elseif 层数 == 3 then
                        地图:地图公告("<#T:990637>") --新一波魔物
                    end
                    if 层数 == 1 then
                        local 怪物刷新 = 获取副本怪物区域(地图, "蜘蛛长廊一层"):获取刷新范围()
                        for key, value in pairs(标准普通刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                        for key, value in pairs(标准精英刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                    elseif 层数 == 2 then
                        local 怪物刷新 = 获取副本怪物区域(地图, "蜘蛛长廊二层"):获取刷新范围()
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(956, 210), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(961, 205), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(966, 200), true, true)
                        for key, value in pairs(标准普通刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                        for key, value in pairs(标准精英刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                    elseif 层数 == 3 then
                        local 怪物刷新 = 获取副本怪物区域(地图, "蜘蛛长廊三层"):获取刷新范围()
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(986, 145), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(991, 140), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(997, 134), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(1002, 129), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(1007, 124), true, true)
                        for key, value in pairs(标准普通刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                        for key, value in pairs(标准精英刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                    end
                    地图.副本节点 = 地图.副本节点 + 1
                    地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
                elseif 节点 == 1 then
                    if 地图.存活怪物总数 ~= 0 then
                        -- if 地图.数字变量[数字_魔塔陷阱类型] ~= 0 then
                        --     --这里触发陷阱和提示
                        -- else
                        --     地图:地图公告("<#T:" .. 50050 + 地图.数字变量[数字_魔塔祭坛类型] .. ">")
                        --     地图.数字变量[数字_魔塔陷阱类型] = 1
                        --     地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
                        -- end
                    else
                        地图.副本节点 = 地图.副本节点 + 1
                        地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
                        地图:地图公告("<#P0:".. 层数 .."><#P1:0><#T:700389>") --第[`~]层蜘蛛长廊已经挑战成功，结束后记得去入口“哨探”处领取奖励。
                        local 玩家列表 = 地图:获取玩家列表()
                        for i = 0, 玩家列表.Count - 1 do
                            local 玩家 = 玩家列表[i]
                            玩家.角色数据.脚本变量[数字_蜘蛛长廊标准层数记录] = 层数
                        end
                    end
                elseif 节点 == 2 then
                    --这里提示下层传送门刷新
                    地图:地图公告("<#T:50030>")
                    地图.副本节点 = 地图.副本节点 + 1
                    地图.节点计时 = 主程.当前时间:AddHours(1.0)
                    if 层数 == 1 then
                        刷新守卫从地图实例(6243, 地图, 游戏方向.下方, Point(918, 254))
                    elseif 层数 == 2 then
                        刷新守卫从地图实例(6243, 地图, 游戏方向.下方, Point(977, 194))
                    elseif 层数 == 3 then
                        刷新守卫从地图实例(6243, 地图, 游戏方向.下方, Point(1015, 122))
                    end
                end
            end
        end
    end

    if 地图.数字变量[数字_蜘蛛长廊级别] == 1 then
        if 主程.当前时间 > 地图.节点计时 then
            if 地图.玩家列表.Count == 0 then
                地图.副本节点 = 255
            end
            if 地图.副本节点 == 255 then
                地图:关闭副本()
            elseif 地图.副本节点 == 0 then
                地图:地图公告("<#T:710387>") --请等待其他勇士准备
                地图.副本节点 = 地图.副本节点 + 1
                地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
            elseif 地图.副本节点 == 1 then
                地图.副本节点 = 10
                地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
            elseif 地图.副本节点 > 9 then
                local 节点 = 地图.副本节点 % 10
                local 层数 = 地图.副本节点 // 10
                if 节点 == 0 then
                    if 层数 == 1 then
                        地图:地图公告("<#T:990175>") --消灭本层所有的怪物之后，到下层的传送阵将会出现。
                    elseif 层数 == 2 then
                        地图:地图公告("<#T:990175>") --消灭本层所有的怪物之后，到下层的传送阵将会出现。
                    elseif 层数 == 3 then
                        地图:地图公告("<#T:990637>") --新一波魔物
                    end
                    if 层数 == 1 then
                        local 怪物刷新 = 获取副本怪物区域(地图, "蜘蛛长廊一层"):获取刷新范围()
                        for key, value in pairs(进阶普通刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                        for key, value in pairs(进阶精英刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                    elseif 层数 == 2 then
                        local 怪物刷新 = 获取副本怪物区域(地图, "蜘蛛长廊二层"):获取刷新范围()
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(956, 210), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(961, 205), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(966, 200), true, true)
                        for key, value in pairs(进阶普通刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                        for key, value in pairs(进阶精英刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                    elseif 层数 == 3 then
                        local 怪物刷新 = 获取副本怪物区域(地图, "蜘蛛长廊三层"):获取刷新范围()
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(986, 145), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(991, 140), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(997, 134), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(1002, 129), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(1007, 124), true, true)
                        for key, value in pairs(进阶普通刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                        for key, value in pairs(进阶精英刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                    end
                    地图.副本节点 = 地图.副本节点 + 1
                    地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
                elseif 节点 == 1 then
                    if 地图.存活怪物总数 ~= 0 then
                        -- if 地图.数字变量[数字_魔塔陷阱类型] ~= 0 then
                        --     --这里触发陷阱和提示
                        -- else
                        --     地图:地图公告("<#T:" .. 50050 + 地图.数字变量[数字_魔塔祭坛类型] .. ">")
                        --     地图.数字变量[数字_魔塔陷阱类型] = 1
                        --     地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
                        -- end
                    else
                        地图.副本节点 = 地图.副本节点 + 1
                        地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
                        地图:地图公告("<#P0:".. 层数 .."><#P1:0><#T:700389>") --第[`~]层蜘蛛长廊已经挑战成功，结束后记得去入口“哨探”处领取奖励。
                        local 玩家列表 = 地图:获取玩家列表()
                        for i = 0, 玩家列表.Count - 1 do
                            local 玩家 = 玩家列表[i]
                            玩家.角色数据.脚本变量[数字_蜘蛛长廊进阶层数记录] = 层数
                        end
                    end
                elseif 节点 == 2 then
                    --这里提示下层传送门刷新
                    地图:地图公告("<#T:50030>")
                    地图.副本节点 = 地图.副本节点 + 1
                    地图.节点计时 = 主程.当前时间:AddHours(1.0)
                    if 层数 == 1 then
                        刷新守卫从地图实例(6243, 地图, 游戏方向.下方, Point(918, 254))
                    elseif 层数 == 2 then
                        刷新守卫从地图实例(6243, 地图, 游戏方向.下方, Point(977, 194))
                    elseif 层数 == 3 then
                        刷新守卫从地图实例(6243, 地图, 游戏方向.下方, Point(1015, 122))
                    end
                end
            end
        end
    end

    if 地图.数字变量[数字_蜘蛛长廊级别] == 2 then
        if 主程.当前时间 > 地图.节点计时 then
            if 地图.玩家列表.Count == 0 then
                地图.副本节点 = 255
            end
            if 地图.副本节点 == 255 then
                地图:关闭副本()
            elseif 地图.副本节点 == 0 then
                地图:地图公告("<#T:710387>") --请等待其他勇士准备
                地图.副本节点 = 地图.副本节点 + 1
                地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
            elseif 地图.副本节点 == 1 then
                地图.副本节点 = 10
                地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
            elseif 地图.副本节点 > 9 then
                local 节点 = 地图.副本节点 % 10
                local 层数 = 地图.副本节点 // 10
                if 节点 == 0 then
                    if 层数 == 1 then
                        地图:地图公告("<#T:990175>") --消灭本层所有的怪物之后，到下层的传送阵将会出现。
                    elseif 层数 == 2 then
                        地图:地图公告("<#T:990175>") --消灭本层所有的怪物之后，到下层的传送阵将会出现。
                    elseif 层数 == 3 then
                        地图:地图公告("<#T:990637>") --新一波魔物
                    end
                    if 层数 == 1 then
                        local 怪物刷新 = 获取副本怪物区域(地图, "蜘蛛长廊一层"):获取刷新范围()
                        for key, value in pairs(困难普通刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                        for key, value in pairs(困难精英刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                    elseif 层数 == 2 then
                        local 怪物刷新 = 获取副本怪物区域(地图, "蜘蛛长廊二层"):获取刷新范围()
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(956, 210), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(961, 205), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(966, 200), true, true)
                        for key, value in pairs(困难普通刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                        for key, value in pairs(困难精英刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                    elseif 层数 == 3 then
                        local 怪物刷新 = 获取副本怪物区域(地图, "蜘蛛长廊三层"):获取刷新范围()
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(986, 145), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(991, 140), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(997, 134), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(1002, 129), true, true)
                        范围刷新怪物从地图实例("蜘蛛长廊陷阱", 地图, 0, Point(1007, 124), true, true)
                        for key, value in pairs(困难普通刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                        for key, value in pairs(困难精英刷怪表[层数]) do
                            范围刷新怪物从地图实例(value, 地图, 0, 怪物刷新, true, true)
                        end
                    end
                    地图.副本节点 = 地图.副本节点 + 1
                    地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
                elseif 节点 == 1 then
                    if 地图.存活怪物总数 ~= 0 then
                        -- if 地图.数字变量[数字_魔塔陷阱类型] ~= 0 then
                        --     --这里触发陷阱和提示
                        -- else
                        --     地图:地图公告("<#T:" .. 50050 + 地图.数字变量[数字_魔塔祭坛类型] .. ">")
                        --     地图.数字变量[数字_魔塔陷阱类型] = 1
                        --     地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
                        -- end
                    else
                        地图.副本节点 = 地图.副本节点 + 1
                        地图.节点计时 = 主程.当前时间:AddSeconds(1.0)
                        地图:地图公告("<#P0:".. 层数 .."><#P1:0><#T:700389>") --第[`~]层蜘蛛长廊已经挑战成功，结束后记得去入口“哨探”处领取奖励。
                        local 玩家列表 = 地图:获取玩家列表()
                        for i = 0, 玩家列表.Count - 1 do
                            local 玩家 = 玩家列表[i]
                            玩家.角色数据.脚本变量[数字_蜘蛛长廊困难层数记录] = 层数
                        end
                    end
                elseif 节点 == 2 then
                    --这里提示下层传送门刷新
                    地图:地图公告("<#T:50030>")
                    地图.副本节点 = 地图.副本节点 + 1
                    地图.节点计时 = 主程.当前时间:AddHours(1.0)
                    if 层数 == 1 then
                        刷新守卫从地图实例(6243, 地图, 游戏方向.下方, Point(918, 254))
                    elseif 层数 == 2 then
                        刷新守卫从地图实例(6243, 地图, 游戏方向.下方, Point(977, 194))
                    elseif 层数 == 3 then
                        刷新守卫从地图实例(6243, 地图, 游戏方向.下方, Point(1015, 122))
                    end
                end
            end
        end
    end
end